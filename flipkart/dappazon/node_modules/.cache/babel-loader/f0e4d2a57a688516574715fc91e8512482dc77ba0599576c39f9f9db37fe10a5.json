{"ast":null,"code":"var _jsxFileName = \"/Users/chandra/Downloads/smartcontracts/web3/flipkart/dappazon/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Section from './components/Section';\nimport Product from './components/Product';\n\n// ABIs\nimport Dappazon from './abis/Dappazon.json';\n\n// Config\nimport config from './config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [dappazon, setDappazon] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [electronics, setElectronics] = useState(null);\n  const [clothing, setClothing] = useState(null);\n  const [toys, setToys] = useState(null);\n  const [item, setItem] = useState({});\n  const [toggle, setToggle] = useState(false);\n  const togglePop = item => {\n    setItem(item);\n    toggle ? setToggle(false) : setToggle(true);\n  };\n  const loadBlockChainData = async () => {\n    //Connect to blockchain\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n    const network = await provider.getNetwork();\n    const dappazon = new ethers.Contract(config[network.chainId].dappazon.address, Dappazon, provider);\n    setDappazon(dappazon);\n    //Connect to smart contracts\n\n    //Load Products\n  };\n\n  useEffect(() => {\n    loadBlockChainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to Dappazon!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Yd+1//dZTcaKQqOiZ4OJhpkTU0A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","Navigation","Section","Product","Dappazon","config","App","provider","setProvider","dappazon","setDappazon","account","setAccount","electronics","setElectronics","clothing","setClothing","toys","setToys","item","setItem","toggle","setToggle","togglePop","loadBlockChainData","providers","Web3Provider","window","ethereum","network","getNetwork","Contract","chainId","address"],"sources":["/Users/chandra/Downloads/smartcontracts/web3/flipkart/dappazon/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\n\n// Components\nimport Navigation from './components/Navigation'\nimport Section from './components/Section'\nimport Product from './components/Product'\n\n// ABIs\nimport Dappazon from './abis/Dappazon.json'\n\n// Config\nimport config from './config.json'\n\nfunction App() {\n\n  const [provider, setProvider] = useState(null)\n  const [dappazon, setDappazon] = useState(null)\n\n  const [account, setAccount] = useState(null)\n\n  const [electronics, setElectronics] = useState(null)\n  const [clothing, setClothing] = useState(null)\n  const [toys, setToys] = useState(null)\n\n  const [item, setItem] = useState({})\n  const [toggle, setToggle] = useState(false)\n\n  const togglePop = (item) => {\n    setItem(item)\n    toggle ? setToggle(false) : setToggle(true)\n  }\n\n  const loadBlockChainData = async () => {\n    //Connect to blockchain\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    setProvider(provider)\n    const network = await provider.getNetwork()\n\n    const dappazon = new ethers.Contract(config[network.chainId].dappazon.address, Dappazon, provider)\n    setDappazon(dappazon)\n    //Connect to smart contracts\n\n    //Load Products\n\n  }\n  useEffect(() => {\n    loadBlockChainData()\n  }, [])\n\n  return (\n    <div>\n      <Navigation account={account} setAccount={setAccount}/>\n      <h2>Welcome to Dappazon!</h2>\n      \n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;;AAE/B;AACA,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;;AAE1C;AACA,OAAOC,QAAQ,MAAM,sBAAsB;;AAE3C;AACA,OAAOC,MAAM,MAAM,eAAe;AAAA;AAElC,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMwB,SAAS,GAAIJ,IAAI,IAAK;IAC1BC,OAAO,CAACD,IAAI,CAAC;IACbE,MAAM,GAAGC,SAAS,CAAC,KAAK,CAAC,GAAGA,SAAS,CAAC,IAAI,CAAC;EAC7C,CAAC;EAED,MAAME,kBAAkB,GAAG,YAAY;IACrC;IACA,MAAMjB,QAAQ,GAAG,IAAIP,MAAM,CAACyB,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnEpB,WAAW,CAACD,QAAQ,CAAC;IACrB,MAAMsB,OAAO,GAAG,MAAMtB,QAAQ,CAACuB,UAAU,EAAE;IAE3C,MAAMrB,QAAQ,GAAG,IAAIT,MAAM,CAAC+B,QAAQ,CAAC1B,MAAM,CAACwB,OAAO,CAACG,OAAO,CAAC,CAACvB,QAAQ,CAACwB,OAAO,EAAE7B,QAAQ,EAAEG,QAAQ,CAAC;IAClGG,WAAW,CAACD,QAAQ,CAAC;IACrB;;IAEA;EAEF,CAAC;;EACDX,SAAS,CAAC,MAAM;IACd0B,kBAAkB,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE,QAAC,UAAU;MAAC,OAAO,EAAEb,OAAQ;MAAC,UAAU,EAAEC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eACvD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA6B;EAAA;IAAA;IAAA;IAAA;EAAA,QAGzB;AAEV;AAAC,GA5CQN,GAAG;AAAA,KAAHA,GAAG;AA8CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}